openapi: 3.0.0
info:
  title: TODOs API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:3000/
    description: Dev server (uses live data)
paths:

  /user:
    get:
      tags:
        - user
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
    post:
      tags:
        - user
      summary: Adds a user Entry
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        201:
          description: Successfully added a project entry.

  /user/{user_id}:
    get:
      tags:
        - user
      summary: Get a user by ID
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: A JSON object of the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  id:
                    type: integer
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updates a user Entry
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        201:
          description: Successfully updated a user entry.
        404:
          description: User not found.
        400:
          description: invalid input
      
    delete:
      tags:
        - user
      summary: Delete a user Entry
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - user_id
            properties:
              user_id:
                type: integer
                format: int32
      responses:
        201:
          description: Successfully deleted the user entry.
        404:
          description: User not found.
        400:
          description: invalid id


  /project:
    get:
      tags:
        - project
      summary: Returns a list of projects
      responses:
        200:
          description: Successfully retrieved projects
          content:
            application/json:
              schema:
                properties:
                  project_id:
                    type: integer
    post:
      tags:
        - project
      summary: Adds a Project Entry.
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Successfully added a project entry.

  /project/{project_id}:
    get:
      tags:
        - project
      summary: Returns a Project by project_id
      description: Optional extended description in CommonMark or HTML.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                  description:
                    type: string
    put:
      tags:
        - project
      summary: Update a specific tasklist Entry in a the project with {project_id}
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - comments
              properties:
                name:
                  type: integer
                  format: int32
                description:
                  type: string
      responses:
        201:
          description: Successfully updated a tasklist entry.
    delete:
      tags:
        - project
      summary: Delete a project Entry
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: project_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - project_id
            properties:
              project_id:
                type: integer
                format: int32
      responses:
        201:
          description: Successfully deleted the project entry.
        404:
          description: Project not found.
        400:
          description: invalid id
        
      


  /project/{project_id}/tasklist:
    get:
      tags:
        - tasklist
      summary: Returns a list of all tasklists in projects
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: project_id
          schema:
            type: integer
          required: true
          description: Numeric ID of tasklists project_id
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - project_id
            properties:
              project_id:
                type: integer
                format: int32
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  array:
                    type: array
                    items:
                      type: object
                      properties:
                        tasklist_id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        project_id:
                          type: integer
                        created_at:
                          type: string
                        updated_at:
                          type: string
    post:
      tags:
        - tasklist
      summary: Adds a tasklist Entry in a the project with {project_id}
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: project_id
          schema:
            type: integer
          required: true
          description: Numeric ID of tasklists project_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: integer
                  format: int32
                description:
                  type: string
      responses:
        201:
          description: Successfully added a tasklist entry.
          content:
            application/json:
              schema:
                properties:
                  tasklist_id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  project_id:
                    type: integer

    

  /project/{project_id}/tasklist/{tasklist_id}:
    get:
      tags:
        - tasklist
      summary: Returns a list of all tasklists in projects
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - in: path
        name: project_id
      - in: path
        name: tasklist_id
        schema:
          properties:
            project_id:
              type: integer
              format: int32
              required: true
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist and project

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  project_id:
                      type: integer
                  tasklist_id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
        400:
          description: Invalid input
        404:
          description: Tasklist not found
                  
    put:
      tags:
        - tasklist
      summary: Update a specific tasklist Entry in a the project with {project_id}
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - in: path
        name: project_id
      - in: path
        name: tasklist_id
        schema:
          properties:
            project_id:
              type: integer
              format: int32
              required: true
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist and project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: integer
                  format: int32
      responses:
        201:
          description: Successfully updated a tasklist entry.
        400:
          description: Invalid input
        404:
          description: Tasklist not found
    delete:
      tags:
        - tasklist
      summary: Delete a tasklist Entry
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - in: path
        name: project_id
      - in: path
        name: tasklist_id
        schema:
          properties:
            project_id:
              type: integer
              format: int32
              required: true
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist and project
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - project_id
              - tasklist_id
            properties:
              project_id:
                type: integer
                format: int32
              tasklist_id:
                type: integer
                format: int32
      responses:
        201:
          description: Successfully deleted the tasklist entry.
        404:
          description: Tasklist not found.
        400:
          description: Invalid input


  /task:
    get:
      tags:
        - task
      summary: Returns a list of tasks
      responses:
        200:
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                properties:
                  task_id:
                    type: integer
    post:
      tags:
        - task
      summary: Adds a task Entry.
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - tasklist_id
                - project_id
              properties:
                name:
                  type: integer
                  format: int32
                description:
                  type: string
                tasklist_id:
                  type: integer
                  format: int32
                project_id:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                due_date:
                  type: string
                
      responses:
        201:
          description: Successfully added a task entry.
    # delete

  /task/{task_id}:
    get:
      tags:
        - task
      summary: Returns a task by task_id
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - in: path
        name: task_id
        schema:
          properties:
            task_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of task
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  name:
                  type: integer
                  format: int32
                description:
                  type: string
                tasklist_id:
                  type: integer
                  format: int32
                project_id:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                due_date:
                  type: string
    put:
        tags:
          - task
        summary: Update a specific tasklist Entry in a the task with {task_id}
        description: Optional extended description in CommonMark or HTML.
        parameters:
          - in: path
            name: task_id
            schema:
              properties:
                task_id:
                  type: integer
                  format: int32
                  required: true
              description: Numeric ID of task
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - description
                properties:
                  name:
                    type: integer
                    format: int32
                  description:
                    type: string
        responses:
          201:
            description: Successfully updated a tasklist entry.
            content:
              application/json:
                schema:
                  properties:
                    name:
                      type: integer
                      format: int32
                    description:
                      type: string
                    tasklist_id:
                      type: integer
                      format: int32
                    project_id:
                      type: integer
                      format: int32
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    due_date:
                      type: string
    delete:
      tags:
        - task
      summary: Delete a task Entry
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - in: path
        name: task_id
        schema:
          properties:
            task_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of task
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - task_id
            properties:
              task_id:
                type: integer
                format: int32
      responses:
        201:
          description: Successfully deleted the task entry.
        404:
          description: Task not found.
        400:
          description: Invalid input



  /tasklist:
    get:
      tags:
        - tasklist
      summary: Returns all tasklists
      description: Optional extended description in CommonMark or HTML.
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - tasklist_id
            properties:
              tasklist_id:
                type: integer
                format: int32
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                  description:
                    type: string
        404:
          description: Tasklists not found.
    post:
      tags:
        - tasklist
      summary: Adds a tasklist Entry.
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Successfully added a project entry.usual
          content:
            application/json:
              schema:
                properties:
                  tasklist_id:
                    type: integer
                    format: int32
                  name:
                    type: string
                  description:
                    type: string


  /tasklist/{tasklist_id}:
    get:
      tags:
        - tasklist
      summary: Returns a tasklists
      description: Optional extended description in CommonMark or HTML.
      parameters:
        in: path
        name: tasklist_id
        schema:
          properties:
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                  description:
                    type: string
    put:
      tags:
        - tasklist
      summary: Update a specific tasklist Entry in a the task with {tasklist_id}
      description: Optional extended description in CommonMark or HTML.
      parameters:
        in: path
        name: tasklist_id
        schema:
          properties:
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - comments
              properties:
                name:
                  type: integer
                  format: int32
                description:
                  type: string
      responses:
        201:
          description: Successfully updated a tasklist entry.
    delete:
      tags:
        - tasklist
      summary: Delete a tasklist Entry
      description: Optional extended description in CommonMark or HTML.
      parameters:
        in: path
        name: tasklist_id
        schema:
          properties:
            tasklist_id:
              type: integer
              format: int32
              required: true
          description: Numeric ID of tasklist
      requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - tasklist_id
            properties:
              tasklist_id:
                type: integer
                format: int32
      responses:
        201:
          description: Successfully deleted the tasklist entry.
        404:
          description: Tasklist not found.
        400:
          description: Invalid input

